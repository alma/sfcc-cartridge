version: 3

env:
  REPOSITORY: sfcc-cartridge

tasks:

  default:
    silent: true
    cmds:
      - task -l

  brew:
    preconditions:
      - sh: brew -v
        msg: 'This task requires `brew`. Please refer to this documentation: https://brew.sh/'

  pre-commit:
    desc: Install pre-commit tool
    internal: true
    deps: [brew]
    status:
      - pre-commit --version
    cmds:
      - brew install pre-commit

  pre-commit:install:
    desc: Install and set up pre-commit hooks
    deps: [pre-commit]
    cmds:
      - pre-commit install --hook-type pre-commit --hook-type commit-msg

  docker:build:
    desc: Build sfcc-cartridge docker image
    cmds:
      - docker compose build sfcc-cartridge

  dev:
    desc: Apply changes on the dev env of SFCC
    deps:
      - docker:build
    cmds:
      -  docker compose run --rm sfcc-cartridge npx sgmf-scripts --uploadCartridge int_alma

  metadata:build:
    desc: Build metadata .zip file (based on .env file)
    deps:
      - docker:build
    cmds:
      -  docker compose run --rm sfcc-cartridge node site_preference_builder/compress.js && node site_preference_builder/main.js

  test:
    desc: Execute Unit Tests with coverage
    deps:
      - docker:build
    cmds:
      - docker compose run -T --rm sfcc-cartridge npx sgmf-scripts --cover test/unit/**/*.js

  lint:
    desc: Run linter
    deps:
      - docker:build
    cmds:
      - docker compose run -T --rm sfcc-cartridge bash -c "npx sgmf-scripts --lint js; npx sgmf-scripts --lint css"

  lint:fix:
    desc: Run linter and apply fix
    deps:
      - docker:build
    cmds:
      -  docker compose run -T --rm sfcc-cartridge bash -c "npx sgmf-scripts --lint js --fix; npx sgmf-scripts --lint css --fix"

  crowdin:
    internal: true
    preconditions:
      - sh: which crowdin
        msg: Crowdin CLI is required

  crowdin:download:
    desc: Download translations from Crowdin
    deps:
      - crowdin
    cmds:
      - crowdin download

  crowdin:upload:
    desc: Upload translations to Crowdin
    deps:
      - crowdin
    cmds:
      - crowdin upload sources

  gh-cli:
    internal: true
    preconditions:
      - sh: gh --version
        msg: |
          ⚠️ This task requires `gh` (Github CLI).
          Please check out: https://github.com/cli/cli#installation
          You'll need a personal access token to authenticate with `gh`.
          Please check out: https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token#creating-a-personal-access-token-classic
          Then, run `gh auth login` or set the GITHUB_TOKEN environment variable with your personal access token.

  release:
    deps:
      - gh-cli
    desc: Create a release pull request
    cmds: 
      - gh workflow run release-pull-request.yml
      - cmd: sleep 2
        silent: true
      - cmd: echo "Release pull request created, check out https://github.com/alma/{{.REPOSITORY}}/pulls?q=is%3Aopen+is%3Apr+label%3Arelease"
        silent: true
      - cmd: echo "If no pull request is created, check out https://github.com/alma/{{.REPOSITORY}}/actions/workflows/release-pull-request.yml"
        silent: true
      - cmd: echo "Please, review and merge the pull request."
        silent: true
      - cmd: echo "After merging, the release will be automatically created."
        silent: true

  hotfix:
    deps:
      - gh-cli
    desc: Create a hotfix pull request
    preconditions:
      - sh: test -n "{{.CHANGELOG_MESSAGE}}"
        msg: |
          ⚠️ This task requires a changelog message.
          Please provide a changelog message. Example: `task hotfix CHANGELOG_MESSAGE='This is a message'`.
    cmds: 
      - gh workflow run hotfix-pull-request.yml -F changelog-message='{{.CHANGELOG_MESSAGE}}'
      - cmd: sleep 2
        silent: true
      - cmd: echo "Hotfix pull request created, check out https://github.com/alma/{{.REPOSITORY}}/pulls?q=is%3Aopen+is%3Apr+label%3Ahotfix"
        silent: true
      - cmd: echo "If no pull request is created, check out https://github.com/alma/{{.REPOSITORY}}/actions/workflows/hotfix-pull-request.yml"
        silent: true
      - cmd: echo "Please, review and merge the pull request."
        silent: true
      - cmd: echo "After merging, the release will be automatically created."
        silent: true
